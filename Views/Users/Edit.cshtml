@model AIHelpdeskSupport.ViewModels.UserViewModel
@{
    ViewData["Title"] = "Edit User";
}

<div class="page-header">
    <div>
        <h1 class="page-title">Edit User</h1>
        <p class="text-muted">Update user information and permissions</p>
    </div>
    <div class="page-actions">
        <a href="/Users" class="btn btn-outline">
            <i class="bi bi-arrow-left"></i>
            <span>Back to Users</span>
        </a>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <div class="user-edit-header">
            <div class="d-flex align-items-center">
                <div class="user-avatar @(Model.IsActive ? "active" : "inactive")">
                    @Model.FirstName[0]@Model.LastName[0]
                </div>
                <div class="user-info">
                    <h2 class="user-title">@Model.FullName</h2>
                    <div class="user-meta">
                        <span class="badge bg-primary">@Model.Role</span>
                        <span class="badge bg-info">@Model.Department</span>
                        <span class="badge bg-@(Model.IsActive ? "success" : "secondary")">
                            @(Model.IsActive ? "Active" : "Inactive")
                        </span>
                    </div>
                </div>
            </div>
            <div class="user-stats">
                <div class="stat-item">
                    <div class="stat-value">@Model.CreatedAt.ToString("MMM d, yyyy")</div>
                    <div class="stat-label">Created</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">
                        @if (Model.LastLogin.HasValue)
                        {
                            @GetTimeAgo(Model.LastLogin.Value)
                        }
                        else
                        {
                            <span>Never</span>
                        }
                    </div>
                    <div class="stat-label">Last Login</div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedAt" />
            <input type="hidden" asp-for="LastLogin" />
            
            <div class="form-tabs">
                <div class="form-tabs-header">
                    <button type="button" class="form-tab active" data-tab="basic-info">
                        <i class="bi bi-person"></i>
                        <span>Basic Info</span>
                    </button>
                    <button type="button" class="form-tab" data-tab="permissions">
                        <i class="bi bi-shield-lock"></i>
                        <span>Permissions</span>
                    </button>
                    <button type="button" class="form-tab" data-tab="account">
                        <i class="bi bi-gear"></i>
                        <span>Account</span>
                    </button>
                </div>
                
                <div class="form-tabs-progress">
                    <div class="progress-bar" style="width: 33%"></div>
                </div>
            </div>
            
            <div class="form-sections">
                <!-- Basic Info Section -->
                <div class="form-section active" id="basic-info">
                    <div class="form-grid-2">
                        <div class="form-group">
                            <label asp-for="FirstName" class="form-label">First Name <span class="required">*</span></label>
                            <input asp-for="FirstName" class="form-control" required />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label asp-for="LastName" class="form-label">Last Name <span class="required">*</span></label>
                            <input asp-for="LastName" class="form-control" required />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Email" class="form-label">Email Address <span class="required">*</span></label>
                        <input asp-for="Email" class="form-control" type="email" required />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    
                    <div class="form-buttons mt-4">
                        <div></div> <!-- Spacer for flex justify-between -->
                        <button type="button" class="btn btn-primary next-tab" data-next="permissions">
                            Continue
                            <i class="bi bi-arrow-right"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Permissions Section -->
                <div class="form-section" id="permissions">
                    <div class="form-grid-2">
                        <div class="form-group">
                            <label asp-for="Department" class="form-label">Department <span class="required">*</span></label>
                            <select asp-for="Department" class="form-select" required>
                                <option value="">Select Department</option>
                                <option value="Administration">Administration</option>
                                <option value="Customer Service">Customer Service</option>
                                <option value="IT Support">IT Support</option>
                                <option value="Sales">Sales</option>
                                <option value="Billing">Billing</option>
                                <option value="Technical">Technical</option>
                                <option value="Operations">Operations</option>
                            </select>
                            <span asp-validation-for="Department" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label asp-for="Role" class="form-label">Role <span class="required">*</span></label>
                            <select asp-for="Role" class="form-select" required>
                                <option value="">Select Role</option>
                                <option value="Administrator">Administrator</option>
                                <option value="Department Manager">Department Manager</option>
                                <option value="Support Agent">Support Agent</option>
                            </select>
                            <span asp-validation-for="Role" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="permissions-section">
                        <h3>Access Permissions</h3>
                        
                        <div class="permission-groups">
                            <div class="permission-group">
                                <div class="permission-group-header">
                                    <h4>Dashboard & Analytics</h4>
                                </div>
                                <div class="permission-list">
                                    <div class="permission-item">
                                        <div class="permission-label">View Dashboard</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-dashboard" checked class="form-switch-input" />
                                                <label for="perm-dashboard" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="permission-item">
                                        <div class="permission-label">View Analytics</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-analytics" checked class="form-switch-input" />
                                                <label for="perm-analytics" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="permission-item">
                                        <div class="permission-label">Export Reports</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-reports" class="form-switch-input" />
                                                <label for="perm-reports" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="permission-group">
                                <div class="permission-group-header">
                                    <h4>Chatbot Management</h4>
                                </div>
                                <div class="permission-list">
                                    <div class="permission-item">
                                        <div class="permission-label">View Chatbots</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-view-chatbots" checked class="form-switch-input" />
                                                <label for="perm-view-chatbots" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="permission-item">
                                        <div class="permission-label">Create Chatbots</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-create-chatbots" class="form-switch-input" />
                                                <label for="perm-create-chatbots" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="permission-item">
                                        <div class="permission-label">Edit Chatbots</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-edit-chatbots" class="form-switch-input" />
                                                <label for="perm-edit-chatbots" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="permission-item">
                                        <div class="permission-label">Delete Chatbots</div>
                                        <div class="permission-control">
                                            <div class="form-switch">
                                                <input type="checkbox" id="perm-delete-chatbots" class="form-switch-input" />
                                                <label for="perm-delete-chatbots" class="form-switch-label"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-buttons mt-4">
                        <button type="button" class="btn btn-outline prev-tab" data-prev="basic-info">
                            <i class="bi bi-arrow-left"></i>
                            Back
                        </button>
                        <button type="button" class="btn btn-primary next-tab" data-next="account">
                            Continue
                            <i class="bi bi-arrow-right"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Account Section -->
                <div class="form-section" id="account">
                    <div class="form-group">
                        <div class="form-switch">
                            <input asp-for="IsActive" class="form-switch-input" />
                            <label asp-for="IsActive" class="form-switch-label">Account Active</label>
                        </div>
                        <div class="form-text">Enable or disable this user account</div>
                    </div>
                    
                    <div class="form-group mt-4">
                        <label class="form-label">Reset Password</label>
                        <div class="reset-password-options">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resetPasswordOption" id="resetPassword-no" value="no" checked>
                                <label class="form-check-label" for="resetPassword-no">
                                    No password reset
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resetPasswordOption" id="resetPassword-email" value="email">
                                <label class="form-check-label" for="resetPassword-email">
                                    Send password reset email
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="resetPasswordOption" id="resetPassword-manual" value="manual">
                                <label class="form-check-label" for="resetPassword-manual">
                                    Set password manually
                                </label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group mt-3" id="manualPasswordFields" style="display: none;">
                        <div class="password-fields">
                            <div class="form-group">
                                <label for="newPassword" class="form-label">New Password</label>
                                <input type="password" id="newPassword" name="NewPassword" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label for="confirmPassword" class="form-label">Confirm Password</label>
                                <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control" />
                            </div>
                        </div>
                    </div>
                    
                    <div class="danger-zone mt-5">
                        <h4 class="danger-zone-title">Danger Zone</h4>
                        <div class="danger-zone-content">
                            <div class="danger-action">
                                <div class="danger-info">
                                    <div class="danger-title">Delete this user</div>
                                    <div class="danger-description">Once deleted, all user data will be permanently removed.</div>
                                </div>
                                <button type="button" class="btn btn-outline-danger" onclick="confirmDelete('@Model.Id')">
                                    Delete User
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-buttons mt-4">
                        <button type="button" class="btn btn-outline prev-tab" data-prev="permissions">
                            <i class="bi bi-arrow-left"></i>
                            Back
                        </button>
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-lg"></i>
                            Save Changes
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal" id="deleteConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action cannot be undone.
                </div>
                <p>Are you sure you want to delete this user? All user data will be permanently removed.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Cancel</button>
                <form method="post" action="/Users/Delete/@Model.Id">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete Permanently</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Tab navigation
            const tabs = document.querySelectorAll('.form-tab');
            const sections = document.querySelectorAll('.form-section');
            const progressBar = document.querySelector('.progress-bar');
            
            function showTab(tabId) {
                // Hide all sections
                sections.forEach(section => {
                    section.classList.remove('active');
                });
                
                // Show the target section
                const targetSection = document.getElementById(tabId);
                targetSection.classList.add('active');
                
                // Update active tab
                tabs.forEach(tab => {
                    tab.classList.remove('active');
                    if (tab.getAttribute('data-tab') === tabId) {
                        tab.classList.add('active');
                    }
                });
                
                // Update progress bar
                const tabIndex = Array.from(tabs).findIndex(tab => tab.getAttribute('data-tab') === tabId);
                const progressPercentage = (tabIndex + 1) / tabs.length * 100;
                progressBar.style.width = `${progressPercentage}%`;
            }
            
            // Add click event to tabs
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');
                    showTab(tabId);
                });
            });
            
            // Next/Prev button handlers
            document.querySelectorAll('.next-tab').forEach(button => {
                button.addEventListener('click', function() {
                    const nextTabId = this.getAttribute('data-next');
                    showTab(nextTabId);
                });
            });
            
            document.querySelectorAll('.prev-tab').forEach(button => {
                button.addEventListener('click', function() {
                    const prevTabId = this.getAttribute('data-prev');
                    showTab(prevTabId);
                });
            });
            
            // Password reset options
            const resetOptions = document.querySelectorAll('input[name="resetPasswordOption"]');
            const manualPasswordFields = document.getElementById('manualPasswordFields');
            
            resetOptions.forEach(option => {
                option.addEventListener('change', function() {
                    if (this.value === 'manual') {
                        manualPasswordFields.style.display = 'block';
                    } else {
                        manualPasswordFields.style.display = 'none';
                    }
                });
            });
            
            // Modal handlers
            function showModal(modal) {
                modal.classList.add('show');
                document.body.classList.add('modal-open');
            }
            
            function hideModal(modal) {
                modal.classList.remove('show');
                document.body.classList.remove('modal-open');
            }
            
            // Close modal buttons
            document.querySelectorAll('.btn-close, [data-bs-dismiss="modal"]').forEach(button => {
                button.addEventListener('click', function() {
                    const modal = this.closest('.modal');
                    hideModal(modal);
                });
            });
            
            // Close modal on outside click
            document.querySelectorAll('.modal').forEach(modal => {
                modal.addEventListener('click', function(event) {
                    if (event.target === this) {
                        hideModal(this);
                    }
                });
            });
        });
        
        function confirmDelete(id) {
            const modal = document.getElementById('deleteConfirmModal');
            modal.classList.add('show');
            document.body.classList.add('modal-open');
        }
    </script>
}

@section Styles {
    <style>
        /* User Edit Header */
        .user-edit-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .user-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 1.125rem;
            color: white;
            margin-right: 1rem;
        }
        
        .user-avatar.active {
            background-color: var(--color-primary);
        }
        
        .user-avatar.inactive {
            background-color: var(--color-secondary);
        }
        
        .user-info {
            flex: 1;
        }
        
        .user-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0 0 0.375rem;
        }
        
        .user-meta {
            display: flex;
            gap: 0.5rem;
        }
        
        .user-stats {
            display: flex;
            gap: 1.5rem;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-value {
            font-size: 1rem;
            font-weight: 600;
            color: var(--color-gray-800);
        }
        
        .stat-label {
            font-size: 0.75rem;
            color: var(--color-gray-500);
        }
        
        /* Form Tabs */
        .form-tabs {
            margin-bottom: 2rem;
        }
        
        .form-tabs-header {
            display: flex;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }
        
        .form-tab {
            padding: 1rem 1.5rem;
            flex: 1;
            text-align: center;
            background: none;
            border: none;
            color: var(--color-gray-600);
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            border-bottom: 2px solid transparent;
        }
        
        .form-tab i {
            margin-right: 0.5rem;
            font-size: 1.125rem;
        }
        
        .form-tab:hover {
            color: var(--color-gray-900);
        }
        
        .form-tab.active {
            color: var(--color-primary);
            border-bottom-color: var(--color-primary);
        }
        
        .form-tabs-progress {
            height: 4px;
            background-color: var(--color-gray-200);
            margin-top: 1px;
            border-radius: 100px;
            overflow: hidden;
        }
        
        .form-tabs-progress .progress-bar {
            height: 100%;
            background-color: var(--color-primary);
            border-radius: 100px;
            transition: width 0.3s ease;
        }
        
        /* Form Sections */
        .form-sections {
            position: relative;
        }
        
        .form-section {
            display: none;
            animation: fadeIn 0.3s ease;
        }
        
        .form-section.active {
            display: block;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .form-grid-2 {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }
        
        .form-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--color-gray-200);
        }
        
        /* Permissions Section */
        .permissions-section {
            margin-top: 1.5rem;
        }
        
        .permissions-section h3 {
            font-size: 1.125rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }
        
        .permission-groups {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }
        
        .permission-group {
            border: 1px solid var(--color-gray-200);
            border-radius: var(--border-radius);
            overflow: hidden;
        }
        
        .permission-group-header {
            background-color: var(--color-gray-50);
            padding: 0.75rem 1rem;
            border-bottom: 1px solid var(--color-gray-200);
        }
        
        .permission-group-header h4 {
            font-size: 0.875rem;
            font-weight: 600;
            margin: 0;
            color: var(--color-gray-700);
        }
        
        .permission-list {
            padding: 0.5rem 0;
        }
        
        .permission-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 1rem;
        }
        
        .permission-label {
            font-size: 0.875rem;
            color: var(--color-gray-700);
        }
        
        /* Password Reset Options */
        .reset-password-options {
            margin-top: 0.5rem;
        }
        
        .form-check {
            margin-bottom: 0.5rem;
        }
        
        .password-fields {
            background-color: var(--color-gray-50);
            padding: 1rem;
            border-radius: var(--border-radius);
            margin-top: 1rem;
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        
        /* Danger Zone */
        .danger-zone {
            background-color: #fff5f5;
            border: 1px solid #ffe3e3;
            border-radius: var(--border-radius);
            overflow: hidden;
        }
        
        .danger-zone-title {
            background-color: #ffe3e3;
            color: var(--color-danger);
            font-size: 0.875rem;
            font-weight: 600;
            padding: 0.75rem 1.25rem;
            margin: 0;
        }
        
        .danger-zone-content {
            padding: 1.25rem;
        }
        
        .danger-action {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .danger-info {
            flex: 1;
            padding-right: 1.5rem;
        }
        
        .danger-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        
        .danger-description {
            font-size: 0.75rem;
            color: var(--color-gray-600);
        }
        
        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
            overflow: auto;
        }
        
        .modal.show {
            display: block;
        }
        
        .modal-dialog {
            margin: 1.75rem auto;
            max-width: 600px;
        }
        
        .modal-content {
            position: relative;
            background-color: white;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-lg);
            display: flex;
            flex-direction: column;
            outline: 0;
        }
        
        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
        }
        
        .modal-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0;
        }
        
        .btn-close {
            padding: 0;
            background: transparent;
            border: 0;
            font-size: 1.5rem;
            line-height: 1;
            color: var(--color-gray-500);
            cursor: pointer;
        }
        
        .modal-body {
            position: relative;
            flex: 1 1 auto;
            padding: 1.5rem;
        }
        
        .modal-footer {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 1.25rem 1.5rem;
            border-top: 1px solid var(--color-gray-200);
            gap: 0.75rem;
        }
        
        /* Alerts */
        .alert {
            padding: 1rem;
            margin-bottom: 1.5rem;
            border-radius: var(--border-radius);
        }
        
        .alert-danger {
            background-color: rgba(220, 53, 69, 0.1);
            border: 1px solid rgba(220, 53, 69, 0.2);
            color: var(--color-danger);
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .alert i {
            font-size: 1.25rem;
            margin-top: 0.125rem;
        }
        
        /* Utility Classes */
        .mt-3 { margin-top: 1rem; }
        .mt-4 { margin-top: 1.5rem; }
        .mt-5 { margin-top: 3rem; }
        .d-flex { display: flex; }
        .align-items-center { align-items: center; }
        .required { color: var(--color-danger); }
    </style>
}

@functions {
    public string GetTimeAgo(DateTime dateTime)
    {
        var timeSpan = DateTime.Now - dateTime;
        
        if (timeSpan.TotalMinutes < 1)
            return "Just now";
        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes} minutes ago";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} hours ago";
        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays} days ago";
        
        return dateTime.ToString("MMM d, yyyy");
    }
}
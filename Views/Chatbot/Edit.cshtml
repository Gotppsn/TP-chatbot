@model AIHelpdeskSupport.Models.Chatbot
@{
    ViewData["Title"] = "Edit Chatbot";
    
    // Setup fallback data in controller via ViewBag if needed
    if (ViewBag.ExampleChatbot == null && Model == null)
    {
        ViewBag.ExampleChatbot = new Chatbot 
        { 
            Id = 1, 
            Name = "Customer Support Bot", 
            Description = "Handles general product inquiries and helps customers troubleshoot common issues.", 
            IsActive = true,
            CreatedAt = DateTime.Now.AddMonths(-3),
            CreatedBy = "Admin",
            FlowiseId = "flow-123456"
        };
    }
    
    // Use either the model passed from controller or the example data
    var chatbot = Model ?? ViewBag.ExampleChatbot;
}

<div class="page-header">
    <div>
        <h1 class="page-title">Edit Chatbot</h1>
        <p class="text-muted">Update your AI-powered chatbot configuration</p>
    </div>
    <div class="page-actions">
        <a href="/Chatbot" class="btn btn-outline">
            <i class="bi bi-arrow-left"></i>
            <span>Back to List</span>
        </a>
        <a href="/Chatbot/Test/@chatbot.Id" class="btn btn-primary">
            <i class="bi bi-chat-dots"></i>
            <span>Test Chatbot</span>
        </a>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <div class="chatbot-edit-header">
            <div class="d-flex align-items-center">
                <div class="chatbot-icon primary">
                    <i class="bi bi-robot"></i>
                </div>
                <div class="chatbot-info">
                    <h2 class="chatbot-title">@chatbot.Name</h2>
                    <div class="chatbot-meta">
                        <span class="badge bg-@(chatbot.IsActive ? "success" : "secondary")">
                            @(chatbot.IsActive ? "Active" : "Inactive")
                        </span>
                    </div>
                </div>
            </div>
            <div class="chatbot-stats">
                <div class="stat-item">
                    <div class="stat-value">427</div>
                    <div class="stat-label">Conversations</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">2.3s</div>
                    <div class="stat-label">Avg. Response</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">92%</div>
                    <div class="stat-label">Success Rate</div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="card-body">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
            <input type="hidden" asp-for="Id" />
            @if (Model != null)
            {
                <input type="hidden" asp-for="CreatedAt" />
                <input type="hidden" asp-for="CreatedBy" />
            }
            
            <div class="form-group mb-4">
                <label asp-for="FlowiseId" class="form-label">Flowise Chatflow ID <span class="required">*</span></label>
                <input type="text" asp-for="FlowiseId" class="form-control" value="@chatbot.FlowiseId" placeholder="e.g. 275a8c78-fa28-494c-98a5" required />
                <div class="form-text">
                    The Flowise Chatflow ID connects this chatbot to your AI workflow
                </div>
                <span asp-validation-for="FlowiseId" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-4">
                <label asp-for="Name" class="form-label">Chatbot Name <span class="required">*</span></label>
                <input asp-for="Name" class="form-control" value="@chatbot.Name" placeholder="e.g. Customer Support Bot" required />
                <div class="form-text">
                    The name displayed to users and administrators
                </div>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

<div class="form-group mb-4">
    <label asp-for="Department" class="form-label">Department <span class="required">*</span></label>
    <select asp-for="Department" class="form-control" required>
        @foreach (var department in ViewBag.Departments)
        {
            <option value="@department" selected="@(Model.Department == department)">@department</option>
        }
    </select>
    <div class="form-text">
        Department that manages this chatbot
    </div>
    <span asp-validation-for="Department" class="text-danger"></span>
</div>       
            
            <div class="form-group mb-4">
                <label asp-for="Description" class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe what this chatbot will help with...">@chatbot.Description</textarea>
                <div class="form-text">
                    Detailed information about this chatbot's purpose and capabilities
                </div>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-4">
                <div class="form-switch">
                    <input asp-for="IsActive" class="form-switch-input" checked="@chatbot.IsActive" />
                    <label asp-for="IsActive" class="form-switch-label">Active</label>
                </div>
                <div class="form-text">Enable or disable this chatbot</div>
            </div>
            
            <div class="form-info-box">
                <div class="info-icon"><i class="bi bi-clock-history"></i></div>
                <div class="info-content">
                    <div class="info-title">Chatbot History</div>
                    <div class="info-details">
                        <div class="info-item">
                            <span class="info-label">Created by:</span>
                            <span class="info-value">@chatbot.CreatedBy</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Created on:</span>
                            <span class="info-value">@chatbot.CreatedAt.ToString("MMM d, yyyy")</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="form-buttons">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-lg"></i>
                    Save Changes
                </button>
            </div>
        </form>
        
        <div class="danger-zone mt-5">
            <h4 class="danger-zone-title">Danger Zone</h4>
            <div class="danger-zone-content">
                <div class="danger-action">
                    <div class="danger-info">
                        <div class="danger-title">Delete this chatbot</div>
                        <div class="danger-description">Once deleted, all conversations and configurations will be permanently removed.</div>
                    </div>
                    <button type="button" class="btn btn-outline-danger" onclick="confirmDelete(@chatbot.Id)">
                        Delete Chatbot
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal" id="deleteConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Chatbot</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action cannot be undone.
                </div>
                <p>Are you sure you want to delete this chatbot? All conversations and configurations will be permanently removed.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Cancel</button>
                <form method="post" action="/Chatbot/Delete/@chatbot.Id">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete Permanently</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function confirmDelete(id) {
            const modal = document.getElementById('deleteConfirmModal');
            modal.classList.add('show');
            document.body.classList.add('modal-open');
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Close modal buttons
            document.querySelectorAll('.btn-close, [data-bs-dismiss="modal"]').forEach(button => {
                button.addEventListener('click', function() {
                    const modal = this.closest('.modal');
                    modal.classList.remove('show');
                    document.body.classList.remove('modal-open');
                });
            });
            
            // Close modal on outside click
            document.querySelectorAll('.modal').forEach(modal => {
                modal.addEventListener('click', function(event) {
                    if (event.target === this) {
                        this.classList.remove('show');
                        document.body.classList.remove('modal-open');
                    }
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        /* Chatbot Edit Header */
        .chatbot-edit-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .chatbot-icon {
            width: 48px;
            height: 48px;
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .chatbot-icon.primary { background-color: rgba(13, 110, 253, 0.1); color: var(--color-primary); }
        
        .chatbot-info {
            margin-left: 1rem;
        }
        
        .chatbot-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0 0 0.375rem;
        }
        
        .chatbot-meta {
            display: flex;
            gap: 0.5rem;
        }
        
        .badge {
            padding: 0.35em 0.65em;
            font-size: 0.75rem;
            font-weight: 600;
            border-radius: 100px;
        }
        
        .chatbot-stats {
            display: flex;
            gap: 1.5rem;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-value {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--color-gray-800);
        }
        
        .stat-label {
            font-size: 0.75rem;
            color: var(--color-gray-500);
        }
        
        /* Form Styling */
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }
        
        .form-control {
            padding: 0.625rem 0.875rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--color-gray-300);
            width: 100%;
            transition: all 0.2s ease;
        }
        
        .form-control:focus {
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.1);
            outline: none;
        }
        
        .form-text {
            font-size: 0.75rem;
            color: var(--color-gray-500);
            margin-top: 0.5rem;
        }
        
        /* Form Info Box */
        .form-info-box {
            display: flex;
            align-items: flex-start;
            margin: 1.5rem 0;
            padding: 1rem;
            background-color: var(--color-gray-50);
            border-radius: var(--border-radius);
            border-left: 3px solid var(--color-primary);
        }
        
        .info-icon {
            width: 36px;
            height: 36px;
            background-color: rgba(13, 110, 253, 0.1);
            color: var(--color-primary);
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            margin-right: 1rem;
        }
        
        .info-content {
            flex: 1;
        }
        
        .info-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
        
        .info-details {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }
        
        .info-item {
            font-size: 0.875rem;
        }
        
        .info-label {
            color: var(--color-gray-600);
            margin-right: 0.25rem;
        }
        
        .info-value {
            font-weight: 500;
        }
        
        /* Form Switch */
        .form-switch {
            display: flex;
            align-items: center;
        }
        
        .form-switch-input {
            appearance: none;
            width: 3.25rem;
            height: 1.75rem;
            border-radius: 100px;
            background-color: var(--color-gray-300);
            position: relative;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        
        .form-switch-input:checked {
            background-color: var(--color-primary);
        }
        
        .form-switch-input::before {
            content: '';
            position: absolute;
            width: 1.25rem;
            height: 1.25rem;
            border-radius: 50%;
            background-color: white;
            top: 0.25rem;
            left: 0.25rem;
            transition: transform 0.3s ease;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
        }
        
        .form-switch-input:checked::before {
            transform: translateX(1.5rem);
        }
        
        .form-switch-label {
            margin-left: 0.75rem;
            font-weight: 500;
            font-size: 0.9375rem;
            cursor: pointer;
        }
        
        /* Form Buttons */
        .form-buttons {
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--color-gray-200);
            display: flex;
            justify-content: flex-end;
        }
        
        /* Danger Zone */
        .danger-zone {
            background-color: #fff5f5;
            border: 1px solid #ffe3e3;
            border-radius: var(--border-radius);
            overflow: hidden;
            margin-top: 3rem;
        }
        
        .danger-zone-title {
            background-color: #ffe3e3;
            color: var(--color-danger);
            font-size: 0.875rem;
            font-weight: 600;
            padding: 0.75rem 1.25rem;
            margin: 0;
        }
        
        .danger-zone-content {
            padding: 1.25rem;
        }
        
        .danger-action {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .danger-info {
            flex: 1;
            padding-right: 1.5rem;
        }
        
        .danger-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }
        
        .danger-description {
            font-size: 0.75rem;
            color: var(--color-gray-600);
        }
        
        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
            overflow: auto;
        }
        
        .modal.show {
            display: block;
        }
        
        .modal-dialog {
            margin: 1.75rem auto;
            max-width: 600px;
        }
        
        .modal-content {
            position: relative;
            background-color: white;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-lg);
            display: flex;
            flex-direction: column;
            outline: 0;
        }
        
        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
        }
        
        .modal-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0;
        }
        
        .btn-close {
            padding: 0;
            background: transparent;
            border: 0;
            font-size: 1.5rem;
            line-height: 1;
            color: var(--color-gray-500);
            cursor: pointer;
        }
        
        .modal-body {
            position: relative;
            flex: 1 1 auto;
            padding: 1.5rem;
        }
        
        .modal-footer {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 1.25rem 1.5rem;
            border-top: 1px solid var(--color-gray-200);
            gap: 0.75rem;
        }
        
        /* Required Field */
        .required {
            color: var(--color-danger);
        }
        
        /* Alert */
        .alert {
            padding: 1rem;
            margin-bottom: 1.5rem;
            border-radius: var(--border-radius);
        }
        
        .alert-danger {
            background-color: rgba(220, 53, 69, 0.1);
            border: 1px solid rgba(220, 53, 69, 0.2);
            color: var(--color-danger);
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .alert i {
            font-size: 1.25rem;
            margin-top: 0.125rem;
        }
        
        /* Utility Classes */
        .d-flex {
            display: flex;
        }
        
        .align-items-center {
            align-items: center;
        }
        
        .mt-5 {
            margin-top: 3rem;
        }
        
        .mb-4 {
            margin-bottom: 1.5rem;
        }
        
        .bg-success {
            background-color: var(--color-success);
            color: white;
        }
        
        .bg-secondary {
            background-color: var(--color-secondary);
            color: white;
        }
        
        /* Responsive Adjustments */
        @@media (max-width: 992px) {
            .chatbot-edit-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .chatbot-stats {
                width: 100%;
                justify-content: space-between;
            }
        }
        
        @@media (min-width: 768px) {
            .form-control {
                max-width: 600px;
            }
            
            .danger-action {
                align-items: center;
            }
        }
        
        @@media (max-width: 767px) {
            .danger-action {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .danger-action button {
                width: 100%;
            }
        }
    </style>
}
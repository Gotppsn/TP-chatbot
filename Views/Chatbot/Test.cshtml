@model AIHelpdeskSupport.Models.Chatbot
@{
    ViewData["Title"] = "Test Chatbot";
}

<div class="container-fluid p-3">
    <h2>Test Chatbot</h2>
    
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 text-muted">Name:</div>
                        <div class="col-md-9">@Model.Name</div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-3 text-muted">Department:</div>
                        <div class="col-md-9">@Model.Department</div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-3 text-muted">AI Model:</div>
                        <div class="col-md-9">@Model.AiModel</div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-3 text-muted">Flowise ID:</div>
                        <div class="col-md-9">@Model.FlowiseId</div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="useEmbeddedWidget" checked>
                                <label class="form-check-label" for="useEmbeddedWidget">
                                    Use embedded widget
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card" id="chatWidgetTest">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Chat Widget Test</h5>
                    <button id="resetBtn" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-arrow-repeat"></i> Reset
                    </button>
                </div>
                <div class="card-body">
                    <div id="chatContainer" style="height: 500px; width: 100%;">
                        <div id="loadingWidget" class="text-center p-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3">Loading...</p>
                        </div>
                        <div id="errorContainer" style="display:none;" class="text-center p-5">
                            <div class="text-danger mb-3">
                                <i class="bi bi-exclamation-circle-fill" style="font-size: 3rem;"></i>
                            </div>
                            <h4>Error Loading Chat Widget</h4>
                            <p id="errorMessage" class="text-muted">Failed to load Flowise script</p>
                            
                            <div class="alert alert-info mt-4">
                                <strong>Note:</strong> Make sure your Flowise server is running and
                                accessible at the configured URL.
                            </div>
                            
                            <button id="tryIframeBtn" class="btn btn-primary mt-3">
                                <i class="bi bi-chat"></i> Try Alternative Widget
                            </button>
                        </div>
                        <div id="iframeContainer" style="height: 100%; width: 100%; display:none;"></div>
                    </div>
                </div>
            </div>
            
            <div class="card mt-4" id="apiTest" style="display:none;">
                <div class="card-header">
                    <h5 class="mb-0">API Test</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="messageInput" class="form-label">Test Message</label>
                        <textarea id="messageInput" class="form-control" rows="3" placeholder="Type your message here..."></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="input-group">
                            <span class="input-group-text">Session ID</span>
                            <input type="text" id="sessionId" class="form-control" value="@Guid.NewGuid().ToString()">
                            <button id="sendBtn" class="btn btn-primary">
                                <i class="bi bi-send"></i> Send
                            </button>
                        </div>
                    </div>
                    <div id="responseContainer" class="mt-4" style="display:none;">
                        <h6>Response:</h6>
                        <div class="border rounded p-3 bg-light">
                            <pre id="responseContent" style="white-space: pre-wrap; max-height: 300px; overflow-y: auto;"></pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Configuration
    const chatflowId = "@Model.FlowiseId";
    const apiHost = "@(ViewBag.FlowiseApiUrl ?? "http://localhost:3000")";
    
    // DOM Elements
    const useEmbeddedWidget = document.getElementById('useEmbeddedWidget');
    const chatWidgetTest = document.getElementById('chatWidgetTest');
    const apiTest = document.getElementById('apiTest');
    const loadingWidget = document.getElementById('loadingWidget');
    const errorContainer = document.getElementById('errorContainer');
    const errorMessage = document.getElementById('errorMessage');
    const iframeContainer = document.getElementById('iframeContainer');
    const resetBtn = document.getElementById('resetBtn');
    const tryIframeBtn = document.getElementById('tryIframeBtn');
    
    // Toggle between widget and API test
    useEmbeddedWidget.addEventListener('change', function() {
        if (this.checked) {
            chatWidgetTest.style.display = 'block';
            apiTest.style.display = 'none';
        } else {
            chatWidgetTest.style.display = 'none';
            apiTest.style.display = 'block';
        }
    });
    
    // Function to create iframe fallback approach
    function loadIframeWidget() {
        // Clear container first
        iframeContainer.innerHTML = '';
        loadingWidget.style.display = 'block';
        errorContainer.style.display = 'none';
        
        // Create iframe pointing directly to Flowise chatbot URL
        const iframe = document.createElement('iframe');
        iframe.style.width = '100%';
        iframe.style.height = '100%';
        iframe.style.border = 'none';
        
        // Construct the URL - remove /api if present
        let baseUrl = apiHost.replace(/\/api\/?$/, '');
        iframe.src = `${baseUrl}/chatbot/${chatflowId}`;
        
        // Handle iframe loading
        iframe.onload = function() {
            loadingWidget.style.display = 'none';
            iframeContainer.style.display = 'block';
        };
        
        iframe.onerror = function() {
            loadingWidget.style.display = 'none';
            errorContainer.style.display = 'block';
            errorMessage.textContent = 'Failed to load chatbot in iframe. Please check your Flowise configuration.';
        };
        
        iframeContainer.appendChild(iframe);
    }
    
    // Try loading the widget directly
    function loadDirectWidget() {
        // Reset display states
        loadingWidget.style.display = 'block';
        errorContainer.style.display = 'none';
        iframeContainer.style.display = 'none';
        
        // Create a direct embed using flowise-fullchatbot element
        try {
            const chatbotElement = document.createElement('div');
            chatbotElement.innerHTML = `
                <flowise-fullchatbot
                    chatflowid="${chatflowId}"
                    apiHost="${apiHost}"
                    style="width: 100%; height: 100%;">
                </flowise-fullchatbot>`;
            
            iframeContainer.innerHTML = '';
            iframeContainer.appendChild(chatbotElement);
            
            // Load the Flowise script
            const script = document.createElement('script');
            script.src = "https://cdn.jsdelivr.net/npm/flowise-embed/dist/flowise-embed.js";
            
            script.onload = function() {
                loadingWidget.style.display = 'none';
                iframeContainer.style.display = 'block';
            };
            
            script.onerror = function(e) {
                console.error("Failed to load Flowise script:", e);
                loadingWidget.style.display = 'none';
                errorContainer.style.display = 'block';
                errorMessage.textContent = 'Failed to load Flowise script. Please check your network connection.';
            };
            
            document.body.appendChild(script);
            
            // Set a timeout in case the script loads but initialization fails
            setTimeout(function() {
                if (loadingWidget.style.display !== 'none') {
                    loadingWidget.style.display = 'none';
                    errorContainer.style.display = 'block';
                }
            }, 10000);
        } catch (error) {
            console.error("Error initializing widget:", error);
            loadingWidget.style.display = 'none';
            errorContainer.style.display = 'block';
            errorMessage.textContent = `Error: ${error.message}`;
        }
    }
    
    // API Test functionality
    const messageInput = document.getElementById('messageInput');
    const sessionIdInput = document.getElementById('sessionId');
    const sendBtn = document.getElementById('sendBtn');
    const responseContainer = document.getElementById('responseContainer');
    const responseContent = document.getElementById('responseContent');
    
    // Send message to API
    sendBtn.addEventListener('click', async function() {
        const message = messageInput.value.trim();
        if (!message) return;
        
        this.disabled = true;
        this.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Sending...';
        
        try {
            const response = await fetch(`${apiHost}/api/prediction/${chatflowId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    question: message,
                    sessionId: sessionIdInput.value
                })
            });
            
            const data = await response.text();
            responseContent.textContent = data;
            responseContainer.style.display = 'block';
        } catch (error) {
            responseContent.textContent = `Error: ${error.message}`;
            responseContainer.style.display = 'block';
        } finally {
            this.disabled = false;
            this.innerHTML = '<i class="bi bi-send"></i> Send';
        }
    });
    
    // Event listeners
    resetBtn.addEventListener('click', loadDirectWidget);
    tryIframeBtn.addEventListener('click', loadIframeWidget);
    
    // Initialize - try iframe approach by default since it's more reliable
    loadIframeWidget();
</script>
}
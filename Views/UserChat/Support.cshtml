@model AIHelpdeskSupport.ViewModels.UserChatViewModel
@{
    ViewData["Title"] = "Help & Support";
}

<div class="support-container">
    <div class="page-header">
        <div>
            <h1 class="page-title">Help & Support</h1>
            <p class="text-muted">Get assistance with using our AI helpdesk platform</p>
        </div>
    </div>
    
    <div class="support-content">
        <div class="support-card">
            <div class="support-card-header">
                <div class="support-icon warning">
                    <i class="bi bi-headset"></i>
                </div>
                <h2>Contact IT Support</h2>
            </div>
            <div class="support-card-body">
                <form id="supportForm" method="post" action="/UserChat/SubmitSupportRequest">
                    @Html.AntiForgeryToken()
                    <div class="form-group mb-3">
                        <label for="issueCategory" class="form-label">Issue Category</label>
                        <select id="issueCategory" name="IssueCategory" class="form-select" required>
                            <option value="">Select Category</option>
                            <option value="Technical">Technical Issue</option>
                            <option value="Access">Access Problem</option>
                            <option value="Training">Training Request</option>
                            <option value="Feature">Feature Request</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="issueSubject" class="form-label">Subject</label>
                        <input type="text" id="issueSubject" name="Subject" class="form-control" required placeholder="Brief description of your issue" />
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="issueDescription" class="form-label">Description</label>
                        <textarea id="issueDescription" name="Description" class="form-control" rows="5" required placeholder="Please provide details about your issue..."></textarea>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="priority" class="form-label">Priority</label>
                        <select id="priority" name="Priority" class="form-select">
                            <option value="Low">Low</option>
                            <option value="Medium" selected>Medium</option>
                            <option value="High">High</option>
                            <option value="Critical">Critical</option>
                        </select>
                    </div>
                    
                    <div class="form-group mb-4">
                        <div class="form-check">
                            <input type="checkbox" id="notifyEmail" name="NotifyEmail" class="form-check-input" />
                            <label for="notifyEmail" class="form-check-label">Receive email notifications about this request</label>
                        </div>
                    </div>
                    
                    <div class="text-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send"></i> Submit Support Request
                        </button>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="support-card">
            <div class="support-card-header">
                <div class="support-icon info">
                    <i class="bi bi-book"></i>
                </div>
                <h2>Help Documentation</h2>
            </div>
            <div class="support-card-body">
                <div class="doc-categories">
                    <div class="doc-category">
                        <div class="doc-icon">
                            <i class="bi bi-rocket-takeoff"></i>
                        </div>
                        <div class="doc-content">
                            <h4>Getting Started</h4>
                            <p>Learn the basics of using our AI helpdesk platform</p>
                            <ul>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Platform overview</a></li>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Your first conversation</a></li>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Understanding AI capabilities</a></li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="doc-category">
                        <div class="doc-icon">
                            <i class="bi bi-lightbulb"></i>
                        </div>
                        <div class="doc-content">
                            <h4>Tips & Tricks</h4>
                            <p>Get the most out of your AI assistant</p>
                            <ul>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Writing effective queries</a></li>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Using advanced features</a></li>
                                <li><a href="#"><i class="bi bi-file-earmark-text me-2"></i>Keyboard shortcuts</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const supportForm = document.getElementById('supportForm');
            
            supportForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Get form data
                const formData = new FormData(supportForm);
                const requestData = {
                    IssueCategory: formData.get('IssueCategory'),
                    Subject: formData.get('Subject'),
                    Description: formData.get('Description'),
                    Priority: formData.get('Priority'),
                    NotifyEmail: formData.get('NotifyEmail') === 'on'
                };
                
                // Submit request via fetch API
                fetch('/UserChat/SubmitSupportRequest', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': formData.get('__RequestVerificationToken')
                    },
                    body: JSON.stringify(requestData)
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Show success message
                    showNotification('success', 'Support request submitted successfully. The IT team will review your request shortly.');
                    supportForm.reset();
                })
                .catch(error => {
                    // Show error message
                    showNotification('error', 'Failed to submit support request. Please try again later.');
                    console.error('Error submitting form:', error);
                });
            });
            
            function showNotification(type, message) {
                // Create notification element
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                
                const icon = type === 'success' ? 
                    '<i class="bi bi-check-circle"></i>' : 
                    '<i class="bi bi-exclamation-circle"></i>';
                
                notification.innerHTML = `
                    <div class="notification-content">
                        <div class="notification-icon">${icon}</div>
                        <div class="notification-message">${message}</div>
                    </div>
                    <button class="notification-close"><i class="bi bi-x"></i></button>
                `;
                
                // Add to DOM
                document.body.appendChild(notification);
                
                // Show notification
                setTimeout(() => {
                    notification.classList.add('show');
                }, 10);
                
                // Auto-hide after 5 seconds
                setTimeout(() => {
                    notification.classList.remove('show');
                    setTimeout(() => {
                        notification.remove();
                    }, 300);
                }, 5000);
                
                // Close button
                const closeBtn = notification.querySelector('.notification-close');
                closeBtn.addEventListener('click', () => {
                    notification.classList.remove('show');
                    setTimeout(() => {
                        notification.remove();
                    }, 300);
                });
            }
        });
    </script>
}

@section Styles {
    <style>
        .support-container {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .support-content {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .support-card {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }
        
        .support-card-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .support-icon {
            width: 48px;
            height: 48px;
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .support-icon.warning {
            background-color: rgba(255, 193, 7, 0.1);
            color: var(--color-warning);
        }
        
        .support-icon.info {
            background-color: rgba(13, 202, 240, 0.1);
            color: var(--color-info);
        }
        
        .support-card-header h2 {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
        }
        
        .support-card-body {
            padding: 1.5rem;
        }
        
        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--color-gray-700);
        }
        
        .form-control, .form-select {
            width: 100%;
            padding: 0.75rem 1rem;
            border-radius: var(--border-radius);
            border: 1px solid var(--color-gray-300);
            font-size: 0.9375rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        
        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.1);
        }
        
        .form-check {
            display: flex;
            align-items: center;
        }
        
        .form-check-input {
            margin-right: 0.5rem;
        }
        
        .form-check-label {
            font-size: 0.875rem;
            color: var(--color-gray-700);
        }
        
        .mb-3 {
            margin-bottom: 1rem;
        }
        
        .mb-4 {
            margin-bottom: 1.5rem;
        }
        
        .text-end {
            text-align: right;
        }
        
        /* Documentation Styles */
        .doc-categories {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .doc-category {
            display: flex;
            gap: 1rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
        }
        
        .doc-category:last-child {
            padding-bottom: 0;
            border-bottom: none;
        }
        
        .doc-icon {
            width: 48px;
            height: 48px;
            border-radius: var(--border-radius);
            background-color: rgba(13, 110, 253, 0.1);
            color: var(--color-primary);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            flex-shrink: 0;
        }
        
        .doc-content {
            flex: 1;
        }
        
        .doc-content h4 {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0 0 0.5rem;
        }
        
        .doc-content p {
            color: var(--color-gray-600);
            margin-bottom: 0.75rem;
        }
        
        .doc-content ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .doc-content ul li {
            margin-bottom: 0.5rem;
        }
        
        .doc-content ul li a {
            color: var(--color-primary);
            text-decoration: none;
            display: flex;
            align-items: center;
            font-size: 0.875rem;
        }
        
        .doc-content ul li a:hover {
            text-decoration: underline;
        }
        
        .me-2 {
            margin-right: 0.5rem;
        }
        
        /* Notification Styles */
        .notification {
            position: fixed;
            bottom: 24px;
            right: 24px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-lg);
            min-width: 300px;
            max-width: 400px;
            padding: 1rem;
            transform: translateY(100%);
            opacity: 0;
            transition: transform 0.3s ease, opacity 0.3s ease;
            z-index: 9999;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }
        
        .notification.show {
            transform: translateY(0);
            opacity: 1;
        }
        
        .notification.success {
            border-left: 4px solid var(--color-success);
        }
        
        .notification.error {
            border-left: 4px solid var(--color-danger);
        }
        
        .notification-content {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .notification-icon {
            font-size: 1.25rem;
            margin-top: 0.125rem;
        }
        
        .notification.success .notification-icon {
            color: var(--color-success);
        }
        
        .notification.error .notification-icon {
            color: var(--color-danger);
        }
        
        .notification-message {
            flex: 1;
            font-size: 0.875rem;
        }
        
        .notification-close {
            background: none;
            border: none;
            cursor: pointer;
            color: var(--color-gray-500);
            padding: 0;
            margin-left: 0.5rem;
            font-size: 1.125rem;
        }
        
        .notification-close:hover {
            color: var(--color-gray-700);
        }
        
        /* Responsive Styles */
        @@media (max-width: 768px) {
            .doc-category {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .doc-icon {
                margin-bottom: 0.75rem;
            }
        }
    </style>
}
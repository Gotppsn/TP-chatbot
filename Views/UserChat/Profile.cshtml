@model AIHelpdeskSupport.Models.ApplicationUser
@{
    ViewData["Title"] = "My Profile";
}

<div class="profile-container">
    <div class="profile-header">
        <div class="profile-avatar">
            @Model.FirstName[0]@Model.LastName[0]
        </div>
        <div class="profile-info">
            <h1 class="profile-name">@Model.FirstName @Model.LastName</h1>
            <div class="profile-meta">
                <span class="profile-role">@Model.Role</span>
                <span class="profile-department">@Model.Department</span>
                <span class="profile-status @(Model.IsActive ? "active" : "inactive")">
                    @(Model.IsActive ? "Active" : "Inactive")
                </span>
            </div>
        </div>
    </div>
    
    <div class="profile-tabs">
        <button class="profile-tab active" data-tab="account">Account Information</button>
        <button class="profile-tab" data-tab="preferences">Preferences</button>
        <button class="profile-tab" data-tab="security">Security</button>
    </div>
    
    <div class="profile-content">
        <div class="profile-section active" id="account">
            <div class="profile-card">
                <div class="card-header">
                    <h2>Personal Information</h2>
                    <button class="btn-icon edit-toggle" data-form="personal-info-form">
                        <i class="bi bi-pencil"></i>
                    </button>
                </div>
                <div class="card-body">
                    <div class="view-mode" id="personal-info-view">
                        <div class="info-group">
                            <div class="info-label">First Name</div>
                            <div class="info-value">@Model.FirstName</div>
                        </div>
                        <div class="info-group">
                            <div class="info-label">Last Name</div>
                            <div class="info-value">@Model.LastName</div>
                        </div>
                        <div class="info-group">
                            <div class="info-label">Department</div>
                            <div class="info-value">@Model.Department</div>
                        </div>
                        <div class="info-group">
                            <div class="info-label">Role</div>
                            <div class="info-value">@Model.Role</div>
                        </div>
                    </div>
                    
                    <form id="personal-info-form" class="edit-mode" style="display: none;" asp-action="UpdateProfile" method="post">
                        <input type="hidden" asp-for="Id" />
                        <div class="form-group">
                            <label asp-for="FirstName" class="form-label">First Name</label>
                            <input asp-for="FirstName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="LastName" class="form-label">Last Name</label>
                            <input asp-for="LastName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Department" class="form-label">Department</label>
                            <input asp-for="Department" class="form-control" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="Role" class="form-label">Role</label>
                            <input asp-for="Role" class="form-control" readonly />
                        </div>
                        <div class="form-buttons">
                            <button type="button" class="btn btn-outline cancel-edit" data-form="personal-info-form">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
            
            <div class="profile-card">
                <div class="card-header">
                    <h2>Contact Information</h2>
                    <button class="btn-icon edit-toggle" data-form="contact-info-form">
                        <i class="bi bi-pencil"></i>
                    </button>
                </div>
                <div class="card-body">
                    <div class="view-mode" id="contact-info-view">
                        <div class="info-group">
                            <div class="info-label">Email</div>
                            <div class="info-value">@Model.Email</div>
                        </div>
                        <div class="info-group">
                            <div class="info-label">Phone Number</div>
                            <div class="info-value">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "Not provided" : Model.PhoneNumber)</div>
                        </div>
                    </div>
                    
                    <form id="contact-info-form" class="edit-mode" style="display: none;" asp-action="UpdateContact" method="post">
                        <input type="hidden" asp-for="Id" />
                        <div class="form-group">
                            <label asp-for="Email" class="form-label">Email</label>
                            <input asp-for="Email" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                            <input asp-for="PhoneNumber" class="form-control" />
                        </div>
                        <div class="form-buttons">
                            <button type="button" class="btn btn-outline cancel-edit" data-form="contact-info-form">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="profile-section" id="preferences">
            <div class="profile-card">
                <div class="card-header">
                    <h2>Interface Preferences</h2>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Theme</label>
                        <div class="theme-options">
                            <div class="theme-option">
                                <input type="radio" name="theme" id="theme-light" checked />
                                <label for="theme-light" class="theme-label">
                                    <div class="theme-preview light-theme"></div>
                                    <span>Light</span>
                                </label>
                            </div>
                            <div class="theme-option">
                                <input type="radio" name="theme" id="theme-dark" />
                                <label for="theme-dark" class="theme-label">
                                    <div class="theme-preview dark-theme"></div>
                                    <span>Dark</span>
                                </label>
                            </div>
                            <div class="theme-option">
                                <input type="radio" name="theme" id="theme-system" />
                                <label for="theme-system" class="theme-label">
                                    <div class="theme-preview system-theme"></div>
                                    <span>System</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="setting-item">
                        <div class="setting-info">
                            <div class="setting-title">Show timestamps in chat</div>
                            <div class="setting-description">Display time information in chat messages</div>
                        </div>
                        <div class="setting-control">
                            <div class="form-switch">
                                <input type="checkbox" id="show-timestamps" checked class="form-switch-input" />
                                <label for="show-timestamps" class="form-switch-label"></label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="setting-item">
                        <div class="setting-info">
                            <div class="setting-title">Email notifications</div>
                            <div class="setting-description">Receive email updates for important events</div>
                        </div>
                        <div class="setting-control">
                            <div class="form-switch">
                                <input type="checkbox" id="email-notifications" class="form-switch-input" />
                                <label for="email-notifications" class="form-switch-label"></label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-buttons">
                        <button type="button" class="btn btn-primary">Save Preferences</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="profile-section" id="security">
            <div class="profile-card">
                <div class="card-header">
                    <h2>Change Password</h2>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post">
                        <div class="form-group">
                            <label for="current-password" class="form-label">Current Password</label>
                            <input type="password" id="current-password" name="CurrentPassword" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="new-password" class="form-label">New Password</label>
                            <input type="password" id="new-password" name="NewPassword" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="confirm-password" class="form-label">Confirm New Password</label>
                            <input type="password" id="confirm-password" name="ConfirmPassword" class="form-control" required />
                        </div>
                        <div class="form-buttons">
                            <button type="submit" class="btn btn-primary">Change Password</button>
                        </div>
                    </form>
                </div>
            </div>
            
            <div class="profile-card">
                <div class="card-header">
                    <h2>Account Security</h2>
                </div>
                <div class="card-body">
                    <div class="setting-item">
                        <div class="setting-info">
                            <div class="setting-title">Two-factor authentication</div>
                            <div class="setting-description">Add an extra layer of security to your account</div>
                        </div>
                        <div class="setting-control">
                            <div class="form-switch">
                                <input type="checkbox" id="two-factor" class="form-switch-input" />
                                <label for="two-factor" class="form-switch-label"></label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="setting-item">
                        <div class="setting-info">
                            <div class="setting-title">Session timeout</div>
                            <div class="setting-description">Automatically log out after period of inactivity</div>
                        </div>
                        <div class="setting-control">
                            <select class="form-select">
                                <option value="15">15 minutes</option>
                                <option value="30" selected>30 minutes</option>
                                <option value="60">1 hour</option>
                                <option value="120">2 hours</option>
                                <option value="0">Never</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Tab switching functionality
            const tabs = document.querySelectorAll('.profile-tab');
            const sections = document.querySelectorAll('.profile-section');
            
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');
                    
                    // Update active tab
                    tabs.forEach(t => t.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Show active section
                    sections.forEach(section => {
                        section.classList.remove('active');
                        if (section.id === tabId) {
                            section.classList.add('active');
                        }
                    });
                });
            });
            
            // Edit mode toggle functionality
            const editButtons = document.querySelectorAll('.edit-toggle');
            const cancelButtons = document.querySelectorAll('.cancel-edit');
            
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const formId = this.getAttribute('data-form');
                    const form = document.getElementById(formId);
                    const viewId = formId.replace('form', 'view');
                    const view = document.getElementById(viewId);
                    
                    form.style.display = 'block';
                    view.style.display = 'none';
                });
            });
            
            cancelButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const formId = this.getAttribute('data-form');
                    const form = document.getElementById(formId);
                    const viewId = formId.replace('form', 'view');
                    const view = document.getElementById(viewId);
                    
                    form.style.display = 'none';
                    view.style.display = 'block';
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        /* Profile Container */
        .profile-container {
            max-width: 900px;
            margin: 0 auto;
        }
        
        /* Profile Header */
        .profile-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .profile-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: var(--color-primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            font-weight: 600;
            margin-right: 1.5rem;
        }
        
        .profile-name {
            font-size: 1.75rem;
            font-weight: 700;
            margin: 0 0 0.5rem;
        }
        
        .profile-meta {
            display: flex;
            gap: 1rem;
        }
        
        .profile-role,
        .profile-department,
        .profile-status {
            font-size: 0.75rem;
            padding: 0.25rem 0.75rem;
            border-radius: 100px;
        }
        
        .profile-role {
            background-color: rgba(13, 110, 253, 0.1);
            color: var(--color-primary);
        }
        
        .profile-department {
            background-color: var(--color-gray-100);
            color: var(--color-gray-700);
        }
        
        .profile-status.active {
            background-color: rgba(32, 201, 151, 0.1);
            color: var(--color-success);
        }
        
        .profile-status.inactive {
            background-color: rgba(220, 53, 69, 0.1);
            color: var(--color-danger);
        }
        
        /* Profile Tabs */
        .profile-tabs {
            display: flex;
            border-bottom: 1px solid var(--color-gray-200);
            margin-bottom: 1.5rem;
        }
        
        .profile-tab {
            padding: 0.75rem 1.5rem;
            background: none;
            border: none;
            border-bottom: 2px solid transparent;
            font-weight: 500;
            color: var(--color-gray-600);
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .profile-tab:hover {
            color: var(--color-gray-900);
        }
        
        .profile-tab.active {
            color: var(--color-primary);
            border-bottom-color: var(--color-primary);
        }
        
        /* Profile Content */
        .profile-section {
            display: none;
        }
        
        .profile-section.active {
            display: block;
        }
        
        .profile-card {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            margin-bottom: 1.5rem;
            overflow: hidden;
        }
        
        .card-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .card-header h2 {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0;
        }
        
        .card-body {
            padding: 1.5rem;
        }
        
        /* Info Groups */
        .info-group {
            margin-bottom: 1.25rem;
        }
        
        .info-group:last-child {
            margin-bottom: 0;
        }
        
        .info-label {
            font-size: 0.75rem;
            color: var(--color-gray-500);
            margin-bottom: 0.375rem;
        }
        
        .info-value {
            font-size: 0.9375rem;
        }
        
        /* Form Groups */
        .form-group {
            margin-bottom: 1.25rem;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
        }
        
        .form-control {
            width: 100%;
            padding: 0.625rem 0.875rem;
            border: 1px solid var(--color-gray-300);
            border-radius: var(--border-radius);
            font-size: 0.9375rem;
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.1);
        }
        
        .form-control[readonly] {
            background-color: var(--color-gray-100);
        }
        
        .form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 0.75rem;
            margin-top: 1.5rem;
        }
        
        /* Setting Items */
        .setting-item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--color-gray-200);
        }
        
        .setting-item:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }
        
        .setting-info {
            padding-right: 1.5rem;
        }
        
        .setting-title {
            font-weight: 500;
            margin-bottom: 0.25rem;
        }
        
        .setting-description {
            font-size: 0.75rem;
            color: var(--color-gray-500);
        }
        
        /* Form Switch */
        .form-switch {
            position: relative;
            display: inline-block;
            width: 40px;
            height: 24px;
        }
        
        .form-switch-input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        
        .form-switch-label {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--color-gray-300);
            transition: .4s;
            border-radius: 34px;
        }
        
        .form-switch-label:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 2px;
            bottom: 2px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        
        .form-switch-input:checked + .form-switch-label {
            background-color: var(--color-primary);
        }
        
        .form-switch-input:checked + .form-switch-label:before {
            transform: translateX(16px);
        }
        
        /* Theme Options */
        .theme-options {
            display: flex;
            gap: 1.5rem;
            margin-top: 0.75rem;
        }
        
        .theme-option {
            position: relative;
        }
        
        .theme-option input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }
        
        .theme-label {
            display: flex;
            flex-direction: column;
            align-items: center;
            cursor: pointer;
        }
        
        .theme-preview {
            width: 80px;
            height: 60px;
            border-radius: var(--border-radius);
            border: 2px solid var(--color-gray-300);
            margin-bottom: 0.5rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .theme-option input:checked + .theme-label .theme-preview {
            border-color: var(--color-primary);
        }
        
        .light-theme {
            background-color: white;
        }
        
        .light-theme::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 30%;
            height: 100%;
            background-color: #f8f9fa;
        }
        
        .dark-theme {
            background-color: #1f2937;
        }
        
        .dark-theme::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 30%;
            height: 100%;
            background-color: #111827;
        }
        
        .system-theme {
            background: linear-gradient(to right, #f8f9fa 30%, white 30%);
        }
        
        .system-theme::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(to bottom, transparent 50%, rgba(31, 41, 55, 0.8) 50%);
            z-index: 1;
        }
        
        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.625rem 1.25rem;
            border-radius: var(--border-radius);
            font-weight: 500;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background-color: var(--color-primary);
            color: white;
            border: 1px solid var(--color-primary);
        }
        
        .btn-primary:hover {
            background-color: #0b5ed7;
            border-color: #0b5ed7;
        }
        
        .btn-outline {
            background-color: transparent;
            color: var(--color-gray-700);
            border: 1px solid var(--color-gray-300);
        }
        
        .btn-outline:hover {
            background-color: var(--color-gray-100);
            border-color: var(--color-gray-400);
        }
        
        .btn-icon {
            width: 36px;
            height: 36px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: var(--border-radius);
            background: none;
            border: none;
            color: var(--color-gray-600);
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .btn-icon:hover {
            background-color: var(--color-gray-100);
            color: var(--color-gray-900);
        }
        
        /* Responsive Styles */
        @@media (max-width: 768px) {
            .profile-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .profile-tabs {
                overflow-x: auto;
                white-space: nowrap;
                padding-bottom: 0.25rem;
            }
            
            .profile-tab {
                padding: 0.75rem 1rem;
            }
            
            .form-buttons {
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .form-buttons .btn {
                width: 100%;
            }
            
            .theme-options {
                flex-direction: column;
                gap: 1rem;
            }
            
            .setting-item {
                flex-direction: column;
                gap: 0.75rem;
            }
            
            .setting-info {
                padding-right: 0;
            }
        }
    </style>
}
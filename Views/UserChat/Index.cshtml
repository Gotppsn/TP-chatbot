@model List<AIHelpdeskSupport.Models.Chatbot>
@{
    ViewData["Title"] = "AI Support";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="page-title">AI Support Assistants</h1>
            <p class="text-muted">Select a chatbot based on your support needs</p>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            No chatbots are currently available. Please check back later.
        </div>
    }
    else
    {
        <div class="department-groups">
            @{
                var departments = Model.Select(c => c.Department).Distinct().OrderBy(d => d);
            }

            @foreach (var department in departments)
            {
                var departmentChatbots = Model.Where(c => c.Department == department && c.IsActive).ToList();
                if (departmentChatbots.Any())
                {
                    <div class="department-section mb-4">
                        <h2 class="department-title">@department</h2>

                        <div class="chatbot-cards">
                            @foreach (var chatbot in departmentChatbots)
                            {
                                <div class="chatbot-card">
                                    <div class="chatbot-card-body">
                                        <div class="chatbot-icon @GetColorClass(chatbot.Department)">
                                            <i class="bi @GetIconClass(chatbot.Department)"></i>
                                        </div>
                                        <div class="chatbot-details">
                                            <h3 class="chatbot-name">@chatbot.Name</h3>
                                            <p class="chatbot-description">@chatbot.Description</p>
                                        </div>
                                    </div>
                                    <div class="chatbot-card-footer">
                                        <a href="@Url.Action("Chat", "UserChat", new { id = chatbot.Id })"
                                            class="btn btn-primary btn-sm">
                                            <i class="bi bi-chat-dots me-1"></i>
                                            Start Conversation
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .department-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid var(--color-gray-200);
        }

        .chatbot-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1rem;
        }

        .chatbot-card {
            background-color: white;
            border-radius: var(--border-radius);
            border: 1px solid var(--color-gray-200);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .chatbot-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-md);
            border-color: var(--color-gray-300);
        }

        .chatbot-card-body {
            padding: 1.25rem;
            display: flex;
            flex: 1;
        }

        .chatbot-icon {
            width: 48px;
            height: 48px;
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-right: 1rem;
            flex-shrink: 0;
        }

        .chatbot-icon.primary {
            background-color: rgba(13, 110, 253, 0.1);
            color: var(--color-primary);
        }

        .chatbot-icon.info {
            background-color: rgba(13, 202, 240, 0.1);
            color: var(--color-info);
        }

        .chatbot-icon.warning {
            background-color: rgba(255, 193, 7, 0.1);
            color: var(--color-warning);
        }

        .chatbot-icon.danger {
            background-color: rgba(220, 53, 69, 0.1);
            color: var(--color-danger);
        }

        .chatbot-icon.success {
            background-color: rgba(32, 201, 151, 0.1);
            color: var(--color-success);
        }

        .chatbot-icon.secondary {
            background-color: rgba(108, 117, 125, 0.1);
            color: var(--color-secondary);
        }

        .chatbot-details {
            flex: 1;
            min-width: 0;
        }

        .chatbot-name {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0 0 0.5rem;
        }

        .chatbot-description {
            font-size: 0.875rem;
            color: var(--color-gray-600);
            margin: 0;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .chatbot-card-footer {
            padding: 1rem 1.25rem;
            border-top: 1px solid var(--color-gray-200);
            background-color: var(--color-gray-50);
        }

        @@media(max - width: 768px) {
                .chatbot-cards {
                    grid-template-columns: 1fr;
                }
            }
        </style>
    }

@functions {
    string GetColorClass(string department)
    {
        return department switch
        {
            "Customer Service" => "primary",
            "IT Support" => "info",
            "Sales" => "warning",
            "Billing" => "danger",
            "Technical" => "success",
            _ => "secondary"
        };
    }

    string GetIconClass(string department)
    {
        return department switch
        {
            "Customer Service" => "bi-headset",
            "IT Support" => "bi-pc-display",
            "Sales" => "bi-currency-dollar",
            "Billing" => "bi-credit-card",
            "Technical" => "bi-wrench",
            _ => "bi-robot"
        };
    }
}
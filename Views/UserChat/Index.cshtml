@model IEnumerable<AIHelpdeskSupport.Models.Chatbot>
@{
    ViewData["Title"] = "My Support Chatbots";
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="display-6">My Support Assistants</h1>
            <p class="text-secondary mb-0">Access chatbots available for your department</p>
        </div>
        <div class="d-flex gap-2">
            <a href="@Url.Action("History")" class="btn btn-outline-primary">
                <i class="bi bi-clock-history"></i> History
            </a>
            <a href="@Url.Action("Support")" class="btn btn-outline-secondary">
                <i class="bi bi-question-circle"></i> Help
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info d-flex align-items-center">
            <i class="bi bi-info-circle-fill me-2 fs-4"></i>
            <div>
                No chatbots are currently available for your department. Please contact support for assistance.
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var chatbot in Model)
            {
                string colorClass = GetColorClass(chatbot.Department);
                string iconClass = GetIconClass(chatbot.Department);
                
                <div class="col">
                    <div class="card h-100 shadow-sm hover-elevate">
                        <div class="card-body">
                            <div class="d-flex mb-3">
                                <div class="chatbot-icon bg-@colorClass-subtle text-@colorClass me-3">
                                    <i class="bi @iconClass"></i>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1">@chatbot.Name</h5>
                                    <span class="badge bg-@colorClass-subtle text-@colorClass">@chatbot.Department</span>
                                    <span class="badge bg-secondary-subtle text-secondary ms-1">@chatbot.AiModel</span>
                                </div>
                            </div>
                            <p class="card-text mb-3 small text-secondary description-text">
                                @(string.IsNullOrEmpty(chatbot.Description) 
                                    ? "This chatbot can answer questions and provide assistance related to " + chatbot.Department + "." 
                                    : chatbot.Description)
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-0 p-3">
                            <a href="@Url.Action("Chat", new { id = chatbot.Id })" class="btn btn-primary w-100">
                                <i class="bi bi-chat-dots me-2"></i> Start Chat
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .chatbot-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .description-text {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            height: 3em;
        }
        
        .hover-elevate {
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .hover-elevate:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
        
        /* Bootstrap color utility extensions */
        .bg-primary-subtle { background-color: rgba(13, 110, 253, 0.1); }
        .bg-success-subtle { background-color: rgba(25, 135, 84, 0.1); }
        .bg-info-subtle { background-color: rgba(13, 202, 240, 0.1); }
        .bg-warning-subtle { background-color: rgba(255, 193, 7, 0.1); }
        .bg-danger-subtle { background-color: rgba(220, 53, 69, 0.1); }
        .bg-secondary-subtle { background-color: rgba(108, 117, 125, 0.1); }
        
        .text-primary { color: #0d6efd !important; }
        .text-success { color: #198754 !important; }
        .text-info { color: #0dcaf0 !important; }
        .text-warning { color: #ffc107 !important; }
        .text-danger { color: #dc3545 !important; }
    </style>
}

@functions {
    string GetColorClass(string department) {
        return department switch {
            "Customer Service" => "primary",
            "IT Support" => "info",
            "Sales" => "warning",
            "Billing" => "danger",
            "Technical" => "success",
            _ => "secondary"
        };
    }
    
    string GetIconClass(string department) {
        return department switch {
            "Customer Service" => "bi-headset",
            "IT Support" => "bi-pc-display",
            "Sales" => "bi-currency-dollar",
            "Billing" => "bi-credit-card",
            "Technical" => "bi-wrench",
            _ => "bi-robot"
        };
    }
}
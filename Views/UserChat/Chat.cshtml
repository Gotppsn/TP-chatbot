@model AIHelpdeskSupport.ViewModels.UserChatViewModel
@{
    ViewData["Title"] = "Chat";
}

<div class="chat-container">
    <div class="chat-header">
        <div class="chat-bot-info">
            <div class="chat-avatar @(Model.Chatbot.IsActive ? "active" : "inactive")">
                <i class="bi bi-robot"></i>
            </div>
            <div class="chat-info">
                <h2 class="chat-title">@Model.Chatbot.Name</h2>
                <div class="chat-meta">
                    <span class="chat-department">@Model.Chatbot.Department</span>
                    <span class="chat-status @(Model.Chatbot.IsActive ? "active" : "inactive")">
                        @(Model.Chatbot.IsActive ? "Online" : "Offline")
                    </span>
                </div>
            </div>
        </div>
        <div class="chat-actions">
            <button class="btn-icon" id="refreshChat" title="Refresh">
                <i class="bi bi-arrow-clockwise"></i>
            </button>
            <button class="btn-icon" id="clearChat" title="Clear Chat">
                <i class="bi bi-trash"></i>
            </button>
        </div>
    </div>
    
    <div class="chat-messages" id="chat-messages">
        <!-- Messages will be populated here through JavaScript -->
        <div class="chat-message bot">
            <div class="message-avatar">
                <i class="bi bi-robot"></i>
            </div>
            <div class="message-content">
                <div class="message-bubble">
                    <p>ðŸ‘‹ Hello! I'm @Model.Chatbot.Name, your @Model.Chatbot.Department assistant. How can I help you today?</p>
                </div>
                <div class="message-info">
                    <span class="message-time">@DateTime.Now.ToString("h:mm tt")</span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="chat-input-wrapper">
        <input type="text" id="chat-input" placeholder="Type your message..." />
        <button id="send-message" class="send-button" disabled>
            <i class="bi bi-send"></i>
        </button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const chatInput = document.getElementById('chat-input');
            const sendButton = document.getElementById('send-message');
            const chatMessages = document.getElementById('chat-messages');
            const clearChatButton = document.getElementById('clearChat');
            
            // Store session ID for this conversation
            let sessionId = '@Model.SessionId';
            
            // Enable/disable send button on input
            chatInput.addEventListener('input', function() {
                sendButton.disabled = this.value.trim() === '';
            });
            
            // Handle message sending
            sendButton.addEventListener('click', sendMessage);
            
            chatInput.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    if (!sendButton.disabled) {
                        sendMessage();
                    }
                }
            });
            
            // Clear chat
            clearChatButton.addEventListener('click', function() {
                // Get first message (bot greeting)
                const firstMessage = chatMessages.firstChild;
                
                // Clear chat except for first message
                chatMessages.innerHTML = '';
                chatMessages.appendChild(firstMessage);
            });
            
            function sendMessage() {
                const message = chatInput.value.trim();
                if (!message) return;
                
                // Add user message
                addMessage('user', message);
                
                // Clear input
                chatInput.value = '';
                sendButton.disabled = true;
                
                // Show typing indicator
                const typingIndicator = document.createElement('div');
                typingIndicator.className = 'chat-message bot typing';
                typingIndicator.innerHTML = `
                    <div class="message-avatar">
                        <i class="bi bi-robot"></i>
                    </div>
                    <div class="message-content">
                        <div class="message-bubble">
                            <div class="typing-indicator">
                                <span></span><span></span><span></span>
                            </div>
                        </div>
                    </div>
                `;
                chatMessages.appendChild(typingIndicator);
                scrollToBottom();
                
                // Call API
                fetch('/api/userchat/message', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        message: message,
                        sessionId: sessionId
                    })
                })
                .then(response => response.json())
                .then(data => {
                    // Remove typing indicator
                    const typingElement = document.querySelector('.typing');
                    if (typingElement) typingElement.remove();
                    
                    // Update session ID if provided
                    if (data.sessionId) {
                        sessionId = data.sessionId;
                    }
                    
                    // Add bot message
                    addMessage('bot', data.response);
                })
                .catch(error => {
                    // Remove typing indicator
                    const typingElement = document.querySelector('.typing');
                    if (typingElement) typingElement.remove();
                    
                    // Add error message
                    addMessage('bot', 'Sorry, I encountered an error. Please try again later.');
                    console.error('Chat API error:', error);
                });
            }
            
            function addMessage(type, text) {
                const timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                
                const messageDiv = document.createElement('div');
                messageDiv.className = `chat-message ${type}`;
                
                const avatar = type === 'bot' ? 
                    '<div class="message-avatar"><i class="bi bi-robot"></i></div>' : 
                    '<div class="message-avatar"><i class="bi bi-person"></i></div>';
                
                messageDiv.innerHTML = `
                    ${avatar}
                    <div class="message-content">
                        <div class="message-bubble">
                            <p>${text}</p>
                        </div>
                        <div class="message-info">
                            <span class="message-time">${timestamp}</span>
                        </div>
                    </div>
                `;
                
                chatMessages.appendChild(messageDiv);
                scrollToBottom();
            }
            
            function scrollToBottom() {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        });
    </script>
}

@section Styles {
    <style>
        .chat-container {
            display: flex;
            flex-direction: column;
            height: calc(100vh - 150px);
            min-height: 500px;
            background-color: white;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            overflow: hidden;
        }
        
        .chat-header {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--color-gray-200);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .chat-bot-info {
            display: flex;
            align-items: center;
        }
        
        .chat-avatar {
            width: 40px;
            height: 40px;
            border-radius: var(--border-radius);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            margin-right: 1rem;
        }
        
        .chat-avatar.active {
            background-color: rgba(32, 201, 151, 0.1);
            color: var(--color-success);
        }
        
        .chat-avatar.inactive {
            background-color: rgba(108, 117, 125, 0.1);
            color: var(--color-secondary);
        }
        
        .chat-info {
            min-width: 0;
        }
        
        .chat-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin: 0 0 0.25rem;
        }
        
        .chat-meta {
            display: flex;
            gap: 0.75rem;
            align-items: center;
        }
        
        .chat-department {
            font-size: 0.75rem;
            color: var(--color-gray-600);
        }
        
        .chat-status {
            display: inline-flex;
            align-items: center;
            font-size: 0.75rem;
            padding: 0.125rem 0.5rem;
            border-radius: 100px;
        }
        
        .chat-status.active {
            background-color: rgba(32, 201, 151, 0.1);
            color: var(--color-success);
        }
        
        .chat-status.inactive {
            background-color: rgba(108, 117, 125, 0.1);
            color: var(--color-secondary);
        }
        
        .chat-actions {
            display: flex;
            gap: 0.5rem;
        }
        
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1.5rem;
            background-color: var(--color-gray-50);
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .chat-message {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
            max-width: 85%;
        }
        
        .chat-message.user {
            margin-left: auto;
            flex-direction: row-reverse;
        }
        
        .message-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.125rem;
            flex-shrink: 0;
        }
        
        .chat-message.bot .message-avatar {
            background-color: rgba(13, 110, 253, 0.1);
            color: var(--color-primary);
        }
        
        .chat-message.user .message-avatar {
            background-color: rgba(108, 117, 125, 0.1);
            color: var(--color-secondary);
        }
        
        .message-content {
            display: flex;
            flex-direction: column;
        }
        
        .message-bubble {
            padding: 0.875rem 1.25rem;
            border-radius: 1rem;
            position: relative;
        }
        
        .chat-message.bot .message-bubble {
            background-color: white;
            border: 1px solid var(--color-gray-200);
            border-bottom-left-radius: 0.25rem;
        }
        
        .chat-message.user .message-bubble {
            background-color: var(--color-primary);
            color: white;
            border-bottom-right-radius: 0.25rem;
        }
        
        .message-bubble p {
            margin: 0;
            line-height: 1.5;
        }
        
        .message-info {
            margin-top: 0.25rem;
            font-size: 0.6875rem;
            color: var(--color-gray-500);
            display: flex;
            align-items: center;
            padding: 0 0.5rem;
        }
        
        .message-time {
            margin-right: 0.5rem;
        }
        
        /* Full-width chat input */
        .chat-input-wrapper {
            display: flex;
            align-items: center;
            border-top: 1px solid var(--color-gray-200);
            padding: 0;
            width: 100%;
            background: white;
        }
        
        #chat-input {
            flex: 1;
            border: none;
            outline: none;
            padding: 15px 20px;
            font-size: 14px;
            background: transparent;
        }
        
        .send-button {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--color-primary);
            color: white;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            margin-right: 15px;
            flex-shrink: 0;
        }
        
        .send-button:disabled {
            background-color: var(--color-gray-300);
            cursor: not-allowed;
        }
        
        /* Typing indicator */
        .typing-indicator {
            display: flex;
            align-items: center;
            gap: 4px;
        }
        
        .typing-indicator span {
            display: inline-block;
            width: 8px;
            height: 8px;
            background-color: #adb5bd;
            border-radius: 50%;
            animation: typing 1s infinite ease-in-out;
        }
        
        .typing-indicator span:nth-child(1) {
            animation-delay: 0s;
        }
        
        .typing-indicator span:nth-child(2) {
            animation-delay: 0.2s;
        }
        
        .typing-indicator span:nth-child(3) {
            animation-delay: 0.4s;
        }
        
        @@keyframes typing {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-4px);
            }
        }
        
        /* Responsive styles */
        @@media (max-width: 768px) {
            .chat-container {
                height: calc(100vh - 120px);
            }
        }
    </style>
}